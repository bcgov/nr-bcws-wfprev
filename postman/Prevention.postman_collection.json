{
	"info": {
		"_postman_id": "e461f033-920d-44ed-b5e4-6fdc5ed82b82",
		"name": "Prevention",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2065617",
		"_collection_link": "https://wf-prevention.postman.co/workspace/WF-Prevention-Workspace~28fb468d-4c8b-4713-8fa7-21d4ad9f4bd4/collection/2065617-e461f033-920d-44ed-b5e4-6fdc5ed82b82?action=share&source=collection_link&creator=2065617"
	},
	"item": [
		{
			"name": "Save Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Use Buffer to encode credentials to Base64",
							"const clientId = pm.environment.get(\"REST_CLIENT_ID\");",
							"const clientSecret = pm.environment.get(\"REST_CLIENT_SECRET\");",
							"const encodedCredentials = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');",
							"",
							"// Set the encoded credentials in the environment",
							"pm.environment.set(\"btoaEncodedCredentials\", encodedCredentials);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.access_token) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"accessToken\", response.access_token);",
							"    console.log(\"Access token saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to retrieve access token:\", response);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{REST_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{REST_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{REST_CLIENT_URL}}/oauth2/v1/oauth/token?disableDeveloperFilter=true&response_type=token&grant_type=client_credentials",
					"host": [
						"{{REST_CLIENT_URL}}"
					],
					"path": [
						"oauth2",
						"v1",
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "disableDeveloperFilter",
							"value": "true"
						},
						{
							"key": "response_type",
							"value": "token"
						},
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.projectGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectGuid\", response.projectGuid);",
							"    console.log(\"Project Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set project guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectTypeCode\": {\n        \"projectTypeCode\": \"FUEL_MGMT\"\n    },\n    \"siteUnitName\": \"Vancouver Forest Unit\",\n    \"forestAreaCode\": {\n        \"forestAreaCode\": \"WEST\"\n    },\n    \"generalScopeCode\": {\n        \"generalScopeCode\": \"SL_ACT\"\n    },\n    \"project_status_code\": \"ACTIVE\",\n    \"programAreaGuid\": \"27602cd9-4b6e-9be0-e063-690a0a0afb50\",\n  \"projectName\": \"Sample Forest Management Project\",\n    \"projectLead\": \"Jane Smith\",\n    \"projectLeadEmailAddress\": \"jane.smith@example.com\",\n    \"projectDescription\": \"This is a comprehensive forest management project focusing on sustainable practices\",\n    \"closestCommunityName\": \"Vancouver\",\n    \"totalEstimatedCostAmount\": 100000.00,\n    \"totalForecastAmount\": 95000.00,\n    \"totalPlannedProjectSizeHa\": 500.00,\n    \"totalPlannedCostPerHectare\": 200.00,\n    \"totalActualAmount\": 0.00,\n    \"isMultiFiscalYearProj\": false,\n    \"forestRegionOrgUnitId\": 1001,\n    \"forestDistrictOrgUnitId\": 2001,\n    \"fireCentreOrgUnitId\": 3001,\n    \"bcParksRegionOrgUnitId\": 4001,\n    \"bcParksSectionOrgUnitId\": 5001,\n    \"primaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"CRIT_INFRA\"\n    },\n    \"secondaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"WRR\"\n    },\n  \"secondaryObjectiveRationale\": \"Rationale test\",\n   \"tertiaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"ECO_REST\"\n    },\n    \"latitude\": 49.246292, \n    \"longitude\": -123.116226\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.projectPlanFiscalGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectPlanFiscalGuid\", response.projectPlanFiscalGuid);",
							"    console.log(\"Project Fiscl Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set project Fiscal guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"activityCategoryCode\": \"TACT_PLAN\",\n  \"fiscalYear\": 2023,\n  \"projectPlanStatusCode\": \"ACTIVE\",\n  \"planFiscalStatusCode\": \"DRAFT\",\n  \"projectFiscalName\": \"Fiscal Project 1\",\n  \"projectFiscalDescription\": \"This is a test project fiscal description.\",\n  \"businessAreaComment\": \"Test comment\",\n  \"estimatedClwrrAllocAmount\": 1000.00,\n  \"fiscalAncillaryFundAmount\": 300.00,\n  \"fiscalPlannedProjectSizeHa\": 10.5,\n  \"fiscalPlannedCostPerHaAmt\": 500.00,\n  \"fiscalReportedSpendAmount\": 0.00,\n  \"fiscalActualAmount\": 0.00,\n  \"fiscalCompletedSizeHa\": 0.0,\n  \"fiscalActualCostPerHaAmt\": 0.0,\n  \"firstNationsDelivPartInd\": true,\n  \"firstNationsEngagementInd\": false,\n  \"firstNationsPartner\": \"Test Partner\",\n  \"resultsNumber\": \"RN123456\",\n  \"resultsOpeningId\": \"RO12345\",\n  \"resultsContactEmail\": \"contact@example.com\",\n  \"submittedByName\": \"Test User\",\n  \"submittedByUserGuid\": \"123e4567-e89\",\n  \"submittedByUserUserid\": \"testuser\",\n  \"submissionTimestamp\": \"2024-01-01T12:00:00Z\",\n  \"isApprovedInd\": true,\n  \"isDelayedInd\": false,\n  \"fiscalForecastAmount\": 1800.00,\n  \"ancillaryFundingProvider\": \"Provider01\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.fileAttachmentGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectFileAttachmentGuid\", response.fileAttachmentGuid);",
							"    console.log(\"projectFileAttachmentGuid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set projectFileAttachmentGuid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sourceObjectNameCode\": {\n    \"sourceObjectNameCode\": \"PROJECT\"\n  },\n  \"sourceObjectUniqueId\": \"{{projectGuid}}\",\n  \"documentPath\": \"/files/uploads/2025/document1.pdf\",\n  \"fileIdentifier\": \"document-2025-001\",\n  \"wildfireYear\": 2025,\n  \"attachmentContentTypeCode\": {\n    \"attachmentContentTypeCode\": \"KML\"\n  },\n  \"attachmentDescription\": \"Wildfire assessment report description\",\n  \"attachmentReadOnlyInd\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/attachments",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"attachments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.projectBoundaryGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectBoundaryGuid\", response.projectBoundaryGuid);",
							"    console.log(\"Project Boundary Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set Project Boundary Guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"systemStartTimestamp\": \"2026-01-01\",\n  \"systemEndTimestamp\": \"2026-12-31\",\n  \"mappingLabel\": \"Test mapping label\",\n  \"collectionDate\": \"2026-01-15\",\n  \"collectionMethod\": \"Test collection method\",\n  \"collectorName\": \"Test_user\",\n  \"boundarySizeHa\": 200.5000,\n  \"boundaryComment\": \"Test activity boundary comment\",\n  \"boundaryGeometry\": {\n    \"type\": \"MultiPolygon\",\n    \"coordinates\": [\n      [\n    [\n    [-124.0000, 49.0000],\n        [-124.0001, 49.0001],\n        [-124.0002, 49.0000],\n        [-124.0000, 49.0000]\n   ]\n    ]\n    ]\n  }\n,\n  \"locationGeometry\": [-124.0000, 49.0000]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectBoundary",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectBoundary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.activityGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"activityGuid\", response.activityGuid);",
							"    console.log(\"Activity Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set Activity Guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectPlanFiscalGuid\": \"{{projectPlanFiscalGuid}}\",\n  \"activityStatusCode\": {\n    \"activityStatusCode\": \"ACTIVE\"\n  },\n  \"silvicultureBaseGuid\": \"aa0a073b-f729-4b3b-9128-810010662772\",\n  \"silvicultureTechniqueGuid\": \"6be605c1-1b9e-4205-b843-92ad662d5176\",\n  \"silvicultureMethodGuid\": \"74ec0cbf-ff97-4583-ac29-b86f4fe77c24\",\n  \"riskRatingCode\": {\n    \"riskRatingCode\": \"LOW_RISK\"\n  },\n  \"contractPhaseCode\": {\n    \"contractPhaseCode\": \"AWARDED\"\n  },\n  \"activityFundingSourceGuid\": \"2141ef38-0a0d-422e-a990-6e9d3d2a4bc8\",\n  \"activityName\": \"Test Silviculture Activity\",\n  \"activityDescription\": \"This is a test activity for silviculture operations\",\n  \"activityStartDate\": \"2025-04-01\",\n  \"activityEndDate\": \"2025-09-30\",\n  \"plannedSpendAmount\": 100000.00,\n  \"plannedTreatmentAreaHa\": 125.5000,\n  \"reportedSpendAmount\": 0.00,\n  \"completedAreaHa\": 0.0000,\n  \"isResultsReportableInd\": true,\n  \"outstandingObligationsInd\": false,\n  \"activityComment\": \"Initial test activity creation\",\n  \"isSpatialAddedInd\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Activity Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.fileAttachmentGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"activityFileAttachmentGuid\", response.fileAttachmentGuid);",
							"    console.log(\"activityFileAttachmentGuid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set activityFileAttachmentGuid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sourceObjectNameCode\": {\n    \"sourceObjectNameCode\": \"TREATMENT_ACTIVITY\"\n  },\n  \"sourceObjectUniqueId\": \"{{activityGuid}}\",\n  \"documentPath\": \"/files/uploads/2025/document1.pdf\",\n  \"fileIdentifier\": \"document-2025-001\",\n  \"wildfireYear\": 2025,\n  \"attachmentContentTypeCode\": {\n    \"attachmentContentTypeCode\": \"KML\"\n  },\n  \"attachmentDescription\": \"Wildfire attachment report description\",\n  \"attachmentReadOnlyInd\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/attachments",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"attachments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Activity Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.activityBoundaryGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"activityBoundaryGuid\", response.activityBoundaryGuid);",
							"    console.log(\"Activity Boundary Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set Activity Boundary Guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"activityGuid\": \"{{activityGuid}}\",\n  \"systemStartTimestamp\": \"2026-01-01\",\n  \"systemEndTimestamp\": \"2026-12-31\",\n  \"plannedSpendAmount\": 200000.00,\n  \"mappingLabel\": \"Test mapping label\",\n  \"collectionDate\": \"2026-01-15\",\n  \"collectionMethod\": \"Test collection method\",\n  \"collectorName\": \"Test_user\",\n  \"boundarySizeHa\": 200.5000,\n  \"boundaryComment\": \"Test activity boundary comment\",\n  \"geometry\": {\n    \"type\": \"MultiPolygon\",\n    \"coordinates\": [\n      [\n    [\n     [-124.0000, 49.0000],\n        [-124.0001, 49.0001],\n        [-124.0002, 49.0000],\n        [-124.0000, 49.0000]\n   ]\n   ]\n    ]\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/activityBoundary",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"activityBoundary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectGuid\": \"{{projectGuid}}\",\n    \"projectTypeCode\": {\n        \"projectTypeCode\": \"FUEL_MGMT\"\n    },\n    \"siteUnitName\": \"Vancouver Forest Unit\",\n    \"forestAreaCode\": {\n        \"forestAreaCode\": \"COAST\"\n    },\n    \"generalScopeCode\": {\n        \"generalScopeCode\": \"SL_ACT\"\n    },\n    \"project_status_code\": \"ACTIVE\",\n    \"programAreaGuid\": \"27602cd9-4b6e-9be0-e063-690a0a0afb50\",\n  \"projectName\": \"Test 3\",\n    \"projectLead\": \"Jane Smith\",\n    \"projectLeadEmailAddress\": \"jane.smith@example.com\",\n    \"projectDescription\": \"This is a comprehensive forest management project focusing on sustainable practices\",\n    \"closestCommunityName\": \"Vancouver\",\n    \"totalEstimatedCostAmount\": 177000.00,\n    \"totalForecastAmount\": 125000.00,\n    \"totalPlannedProjectSizeHa\": 500.00,\n    \"totalPlannedCostPerHectare\": 200.00,\n    \"totalActualAmount\": 0.00,\n    \"isMultiFiscalYearProj\": false,\n    \"forestRegionOrgUnitId\": 1001,\n    \"forestDistrictOrgUnitId\": 2001,\n    \"fireCentreOrgUnitId\": 3001,\n    \"bcParksRegionOrgUnitId\": 4001,\n    \"bcParksSectionOrgUnitId\": 5001,\n    \"primaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"RECONCIL\"\n    },\n    \"secondaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"HAZ_ABATE\"\n    },\n   \"secondaryObjectiveRationale\": \"Rationale test\",\n   \"tertiaryObjectiveTypeCode\": {\n        \"objectiveTypeCode\": \"FOR_HEALTH\"\n    },\n    \"latitude\": 53.916943, \n    \"longitude\": -122.749443 \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectPlanFiscalGuid\": \"{{projectPlanFiscalGuid}}\",\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"activityCategoryCode\": \"RX_DEV\",\n  \"fiscalYear\": 2024,\n  \"projectPlanStatusCode\": \"ACTIVE\",\n  \"planFiscalStatusCode\": \"PROPOSED\",\n  \"projectFiscalName\": \"Fiscal Project 1\",\n  \"projectFiscalDescription\": \"This is a test project fiscal description.\",\n  \"businessAreaComment\": \"Test comment\",\n  \"estimatedClwrrAllocAmount\": 1000.00,\n  \"fiscalForecastAmount\": 300.00,\n  \"fiscalAncillaryFundAmount\": 300.00,\n  \"fiscalPlannedProjectSizeHa\": 10.5,\n  \"fiscalPlannedCostPerHaAmt\": 500.00,\n  \"fiscalReportedSpendAmount\": 0.00,\n  \"fiscalActualAmount\": 0.00,\n  \"fiscalCompletedSizeHa\": 0.0,\n  \"fiscalActualCostPerHaAmt\": 0.0,\n  \"firstNationsDelivPartInd\": true,\n  \"firstNationsEngagementInd\": false,\n  \"firstNationsPartner\": \"Test Partner\",\n  \"resultsNumber\": \"RN123456\",\n  \"resultsOpeningId\": \"RO12345\",\n  \"resultsContactEmail\": \"contact@example.com\",\n  \"submittedByName\": \"Test User\",\n  \"submittedByUserGuid\": \"123e4567-e89\",\n  \"submittedByUserUserid\": \"testuser\",\n  \"submissionTimestamp\": \"2024-01-01T12:00:00Z\",\n  \"isApprovedInd\": true,\n  \"isDelayedInd\": false,\n  \"ancillaryFundingProvider\": \"Provider01\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fileAttachmentGuid\": \"{{projectFileAttachmentGuid}}\",\n  \"sourceObjectNameCode\": {\n    \"sourceObjectNameCode\": \"PROJECT\"\n  },\n  \"sourceObjectUniqueId\": \"{{projectGuid}}\",\n  \"documentPath\": \"/files/uploads/2026/document1.pdf\",\n  \"fileIdentifier\": \"document-2026-001\",\n  \"wildfireYear\": 2026,\n  \"attachmentContentTypeCode\": {\n    \"attachmentContentTypeCode\": \"DOCUMENT\"\n  },\n  \"attachmentDescription\": \"Wildfire assessment report description has been updated\",\n  \"attachmentReadOnlyInd\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}}/attachments/{{projectFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"attachments",
						"{{projectFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectBoundaryGuid\": \"{{projectBoundaryGuid}}\",\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"systemStartTimestamp\": \"2027-02-01\",\n  \"systemEndTimestamp\": \"2027-11-30\",\n  \"mappingLabel\": \"Updated test mapping label\",\n  \"collectionDate\": \"2027-02-10\",\n  \"collectionMethod\": \"Updated test collection method\",\n  \"collectorName\": \"Updated_user\",\n  \"boundarySizeHa\": 300.7500,\n  \"boundaryComment\": \"Updated test project boundary comment\",\n  \"boundaryGeometry\": {\n    \"type\": \"MultiPolygon\",\n    \"coordinates\": [\n        [\n            [\n                [-125.0000, 50.0000],\n                [-125.0001, 50.0001],\n                [-125.0002, 50.0000],\n                [-125.0000, 50.0000]\n            ]\n        ],\n        [\n            [\n                [-126.0000, 51.0000],\n                [-126.0001, 51.0001],\n                [-126.0002, 51.0000],\n                [-126.0000, 51.0000]\n            ]\n        ]\n    ]\n},\n  \"locationGeometry\": [-125.0002, 50.0000]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectBoundary/{{projectBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectBoundary",
						"{{projectBoundaryGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"activityGuid\": \"{{activityGuid}}\",\n  \"projectPlanFiscalGuid\": \"{{projectPlanFiscalGuid}}\",\n  \"activityStatusCode\": {\n    \"activityStatusCode\": \"COMPLETED\"\n  },\n  \"silvicultureBaseGuid\": \"3bcf99c5-0891-4bbf-bdf5-2161c1b38d91\",\n  \"silvicultureTechniqueGuid\": \"970a3b25-03ba-42fd-b68e-c9272a707d0a\",\n  \"silvicultureMethodGuid\": \"1a230400-564c-4d42-9b61-2c2f5be65d13\",\n  \"riskRatingCode\": {\n    \"riskRatingCode\": \"HIGH_RISK\"\n  },\n  \"contractPhaseCode\": {\n    \"contractPhaseCode\": \"MULT_BID\"\n  },\n  \"activityFundingSourceGuid\": \"04543243-28ed-4a2b-8935-5f91acdb608c\",\n  \"activityName\": \"Updated Silviculture Activity\",\n  \"activityDescription\": \"This is an updated test activity for silviculture operations\",\n  \"activityStartDate\": \"2026-05-01\",\n  \"activityEndDate\": \"2026-10-31\",\n  \"plannedSpendAmount\": 150000.00,\n  \"plannedTreatmentAreaHa\": 135.7500,\n  \"reportedSpendAmount\": 50000.00,\n  \"completedAreaHa\": 120.5000,\n  \"isResultsReportableInd\": false,\n  \"outstandingObligationsInd\": true,\n  \"activityComment\": \"Updated activity after completion\",\n  \"isSpatialAddedInd\": true\n}",

					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Activity Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fileAttachmentGuid\": \"{{activityFileAttachmentGuid}}\",\n  \"sourceObjectNameCode\": {\n    \"sourceObjectNameCode\": \"TREATMENT_ACTIVITY\"\n  },\n  \"sourceObjectUniqueId\": \"{{activityGuid}}\",\n  \"documentPath\": \"/files/uploads/2026/document1.pdf\",\n  \"fileIdentifier\": \"document-2026-001\",\n  \"wildfireYear\": 2026,\n  \"attachmentContentTypeCode\": {\n    \"attachmentContentTypeCode\": \"DOCUMENT\"\n  },\n  \"attachmentDescription\": \"Wildfire assessment report description has been updated\",\n  \"attachmentReadOnlyInd\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/attachments/{{activityFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"attachments",
						"{{activityFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Activity Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"activityBoundaryGuid\": \"{{activityBoundaryGuid}}\",\n  \"activityGuid\": \"{{activityGuid}}\",\n  \"systemStartTimestamp\": \"2027-02-01\",\n  \"systemEndTimestamp\": \"2027-11-30\",\n  \"plannedSpendAmount\": 300000.00,\n  \"mappingLabel\": \"Updated test mapping label\",\n  \"collectionDate\": \"2027-02-10\",\n  \"collectionMethod\": \"Updated test collection method\",\n  \"collectorName\": \"Updated_user\",\n  \"boundarySizeHa\": 300.7500,\n  \"boundaryComment\": \"Updated test activity boundary comment\",\n  \"geometry\": {\n    \"type\": \"MultiPolygon\",\n    \"coordinates\": [\n        [\n            [\n                [-125.0000, 50.0000],\n                [-125.0001, 50.0001],\n                [-125.0002, 50.0000],\n                [-125.0000, 50.0000]\n            ]\n        ],\n        [\n            [\n                [-126.0000, 51.0000],\n                [-126.0001, 51.0001],\n                [-126.0002, 51.0000],\n                [-126.0000, 51.0000]\n            ]\n        ]\n    ]\n}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/activityBoundary/{{activityBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"activityBoundary",
						"{{activityBoundaryGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Projects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Parks Section Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/bcParksSectionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"bcParksSectionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET program Area Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/programAreaCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"programAreaCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Forest District Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/forestDistrictCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"forestDistrictCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET General Scope Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/generalScopeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"generalScopeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Project Type Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/projectTypeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"projectTypeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Forest Region Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/forestRegionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"forestRegionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BC Parks Region Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/bcParksRegionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"bcParksRegionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Objective Type Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/objectiveTypeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"objectiveTypeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Project Plan Status Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/projectPlanStatusCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"projectPlanStatusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Activity Status Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/activityStatusCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"activityStatusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Risk Rating Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/riskRatingCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"riskRatingCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Contract Phase Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/contractPhaseCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"contractPhaseCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Activity Category Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/activityCategoryCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"activityCategoryCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Fiscal Status Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/planFiscalStatusCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"planFiscalStatusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Ancillary Funding Source Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/ancillaryFundingSourceCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"ancillaryFundingSourceCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Source Object Name Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/sourceObjectNameCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"sourceObjectNameCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Attachment Content Type Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/attachmentContentTypeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"attachmentContentTypeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Silviculture Base Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/silvicultureBaseCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"silvicultureBaseCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Silviculture Method Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/silvicultureMethodCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"silvicultureMethodCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Silviculture Technique Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/silvicultureTechniqueCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"silvicultureTechniqueCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Proposal Type Codes",
			"event": [
				{
				"listen": "test",
				"script": {
					"exec": [
					"pm.test(\"Status code is 200\", function() {",
					"    pm.response.to.have.status(200);",
					"})"
					],
					"type": "text/javascript"
				}
				}
			],
			"request": {
				"auth": {
				"type": "bearer",
				"bearer": [
					{
					"key": "token",
					"value": "{{accessToken}}",
					"type": "string"
					}
				]
				},
				"method": "GET",
				"header": [
				{
					"key": "Content-Type",
					"value": "application/json",
					"type": "text"
				}
				],
				"url": {
				"raw": "{{LOCAL_API_URL}}/codes/proposalTypeCodes",
				"host": [
					"{{LOCAL_API_URL}}"
				],
				"path": [
					"codes",
					"proposalTypeCodes"
				]
				}
			},
			"response": []
		},
		{
			"name": "GET WUI Risk Class Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/wuiRiskClassCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"wuiRiskClassCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Fiscals",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/attachments/{{projectFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"attachments",
						"{{projectFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Attachments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/attachments",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"attachments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectBoundary/{{projectBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectBoundary",
						"{{projectBoundaryGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project Boundaries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectBoundary",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectBoundary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/attachments/{{activityFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"attachments",
						"{{activityFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity Attachments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/attachments",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"attachments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity Boundaries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/activityBoundary",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"activityBoundary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Activity Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/{{activityGuid}}/activityBoundary/{{activityBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"activityBoundary",
						"{{activityBoundaryGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Features",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/features",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"features"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/attachments/{{projectFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"attachments",
						"{{projectFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectBoundary/{{projectBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectBoundary",
						"{{projectBoundaryGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Activity Attachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/attachments/{{activityFileAttachmentGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"attachments",
						"{{activityFileAttachmentGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Activity Boundary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}/activities/{{activityGuid}}/activityBoundary/{{activityBoundaryGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}",
						"activities",
						"{{activityGuid}}",
						"activityBoundary",
						"{{activityBoundaryGuid}}"
					]
				}
			},
			"response": []
		}
	]
}