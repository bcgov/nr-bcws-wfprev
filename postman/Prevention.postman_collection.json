{
	"info": {
		"_postman_id": "e461f033-920d-44ed-b5e4-6fdc5ed82b82",
		"name": "Prevention",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2065617",
		"_collection_link": "https://wf-prevention.postman.co/workspace/WF-Prevention-Workspace~28fb468d-4c8b-4713-8fa7-21d4ad9f4bd4/collection/2065617-e461f033-920d-44ed-b5e4-6fdc5ed82b82?action=share&source=collection_link&creator=2065617"
	},
	"item": [
		{
			"name": "Save Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Use Buffer to encode credentials to Base64",
							"const clientId = pm.environment.get(\"REST_CLIENT_ID\");",
							"const clientSecret = pm.environment.get(\"REST_CLIENT_SECRET\");",
							"const encodedCredentials = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');",
							"",
							"// Set the encoded credentials in the environment",
							"pm.environment.set(\"btoaEncodedCredentials\", encodedCredentials);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.access_token) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"accessToken\", response.access_token);",
							"    console.log(\"Access token saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to retrieve access token:\", response);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{REST_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{REST_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{REST_CLIENT_URL}}/oauth2/v1/oauth/token?disableDeveloperFilter=true&response_type=token&grant_type=client_credentials",
					"host": [
						"{{REST_CLIENT_URL}}"
					],
					"path": [
						"oauth2",
						"v1",
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "disableDeveloperFilter",
							"value": "true"
						},
						{
							"key": "response_type",
							"value": "token"
						},
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.projectGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectGuid\", response.projectGuid);",
							"    console.log(\"Project Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set project guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectTypeCode\": {\n        \"projectTypeCode\": \"FUEL_MGMT\"\n    },\n    \"siteUnitName\": \"Vancouver Forest Unit\",\n    \"forestAreaCode\": {\n        \"forestAreaCode\": \"WEST\"\n    },\n    \"generalScopeCode\": {\n        \"generalScopeCode\": \"SL_ACT\"\n    },\n    \"project_status_code\": \"ACTIVE\",\n    \"programAreaGuid\": \"27602cd9-4b6e-9be0-e063-690a0a0afb50\",\n    \"projectName\": \"Sample Forest Management Project\",\n    \"projectLead\": \"Jane Smith\",\n    \"projectLeadEmailAddress\": \"jane.smith@example.com\",\n    \"projectDescription\": \"This is a comprehensive forest management project focusing on sustainable practices\",\n    \"closestCommunityName\": \"Vancouver\",\n    \"totalEstimatedCostAmount\": 100000.00,\n    \"totalForecastAmount\": 95000.00,\n    \"totalPlannedProjectSizeHa\": 500.00,\n    \"totalPlannedCostPerHectare\": 200.00,\n    \"totalActualAmount\": 0.00,\n    \"isMultiFiscalYearProj\": false,\n    \"forestRegionOrgUnitId\": 1001,\n    \"forestDistrictOrgUnitId\": 2001,\n    \"fireCentreOrgUnitId\": 3001,\n    \"bcParksRegionOrgUnitId\": 4001,\n    \"bcParksSectionOrgUnitId\": 5001\n,\n    \"primaryObjectiveTypeCode\": \"WRR\",\n    \"secondaryObjectiveTypeCode\": \"CRIT_INFRA\",\n    \"tertiaryObjectiveTypeCode\": \"ECO_REST\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON",
							"const response = pm.response.json();",
							"",
							"// Check if the access token exists in the response",
							"if (response.projectPlanFiscalGuid) {",
							"    // Save the token to an environment variable",
							"    pm.environment.set(\"projectPlanFiscalGuid\", response.projectPlanFiscalGuid);",
							"    console.log(\"Project Fiscl Guid saved successfully!\");",
							"} else {",
							"    console.error(\"Failed to set project Fiscal guid:\", response);",
							"}",
							"",
							"pm.test(\"Status code is 201\", function() {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"activityCategoryCode\": \"TACT_PLAN\",\n  \"fiscalYear\": 2023,\n  \"projectPlanStatusCode\": \"ACTIVE\",\n  \"planFiscalStatusCode\": \"DRAFT\",\n  \"projectFiscalName\": \"Fiscal Project 1\",\n  \"projectFiscalDescription\": \"This is a test project fiscal description.\",\n  \"businessAreaComment\": \"Test comment\",\n  \"estimatedClwrrAllocAmount\": 1000.00,\n  \"totalCostEstimateAmount\": 2000.00,\n  \"fiscalAncillaryFundAmount\": 300.00,\n  \"fiscalPlannedProjectSizeHa\": 10.5,\n  \"fiscalPlannedCostPerHaAmt\": 500.00,\n  \"fiscalReportedSpendAmount\": 0.00,\n  \"fiscalActualAmount\": 0.00,\n  \"fiscalCompletedSizeHa\": 0.0,\n  \"fiscalActualCostPerHaAmt\": 0.0,\n  \"firstNationsDelivPartInd\": true,\n  \"firstNationsEngagementInd\": false,\n  \"firstNationsPartner\": \"Test Partner\",\n  \"resultsNumber\": \"RN123456\",\n  \"resultsOpeningId\": \"RO12345\",\n  \"resultsContactEmail\": \"contact@example.com\",\n  \"submittedByName\": \"Test User\",\n  \"submittedByUserGuid\": \"123e4567-e89\",\n  \"submittedByUserUserid\": \"testuser\",\n  \"submissionTimestamp\": \"2024-01-01T12:00:00Z\",\n  \"isApprovedInd\": true,\n  \"isDelayedInd\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"projectPlanFiscalGuid\": \"{{projectPlanFiscalGuid}}\",\n  \"projectGuid\": \"{{projectGuid}}\",\n  \"activityCategoryCode\": \"RX_DEV\",\n  \"fiscalYear\": 2024,\n  \"projectPlanStatusCode\": \"ACTIVE\",\n  \"planFiscalStatusCode\": \"PROPOSED\",\n  \"projectFiscalName\": \"Fiscal Project 1\",\n  \"projectFiscalDescription\": \"This is a test project fiscal description.\",\n  \"businessAreaComment\": \"Test comment\",\n  \"estimatedClwrrAllocAmount\": 1000.00,\n  \"totalCostEstimateAmount\": 2000.00,\n  \"fiscalForecastAmount\": 300.00,\n  \"fiscalAncillaryFundAmount\": 300.00,\n  \"fiscalPlannedProjectSizeHa\": 10.5,\n  \"fiscalPlannedCostPerHaAmt\": 500.00,\n  \"fiscalReportedSpendAmount\": 0.00,\n  \"fiscalActualAmount\": 0.00,\n  \"fiscalCompletedSizeHa\": 0.0,\n  \"fiscalActualCostPerHaAmt\": 0.0,\n  \"firstNationsDelivPartInd\": true,\n  \"firstNationsEngagementInd\": false,\n  \"firstNationsPartner\": \"Test Partner\",\n  \"resultsNumber\": \"RN123456\",\n  \"resultsOpeningId\": \"RO12345\",\n  \"resultsContactEmail\": \"contact@example.com\",\n  \"submittedByName\": \"Test User\",\n  \"submittedByUserGuid\": \"123e4567-e89\",\n  \"submittedByUserUserid\": \"testuser\",\n  \"submissionTimestamp\": \"2024-01-01T12:00:00Z\",\n  \"isApprovedInd\": true,\n  \"isDelayedInd\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Projects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Project Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectGuid\": \"{{projectGuid}}\",\n    \"projectTypeCode\": {\n        \"projectTypeCode\": \"FUEL_MGMT\"\n    },\n    \"siteUnitName\": \"Vancouver Forest Unit\",\n    \"forestAreaCode\": {\n        \"forestAreaCode\": \"COAST\"\n    },\n    \"generalScopeCode\": {\n        \"generalScopeCode\": \"SL_ACT\"\n    },\n    \"project_status_code\": \"ACTIVE\",\n    \"programAreaGuid\": \"27602cd9-4b6e-9be0-e063-690a0a0afb50\",\n    \"projectName\": \"Test 3\",\n    \"projectLead\": \"Jane Smith\",\n    \"projectLeadEmailAddress\": \"jane.smith@example.com\",\n    \"projectDescription\": \"This is a comprehensive forest management project focusing on sustainable practices\",\n    \"closestCommunityName\": \"Vancouver\",\n    \"totalEstimatedCostAmount\": 100000.00,\n    \"totalForecastAmount\": 95000.00,\n    \"totalPlannedProjectSizeHa\": 500.00,\n    \"totalPlannedCostPerHectare\": 200.00,\n    \"totalActualAmount\": 0.00,\n    \"isMultiFiscalYearProj\": false,\n    \"forestRegionOrgUnitId\": 1001,\n    \"forestDistrictOrgUnitId\": 2001,\n    \"fireCentreOrgUnitId\": 3001,\n    \"bcParksRegionOrgUnitId\": 4001,\n    \"bcParksSectionOrgUnitId\": 5001\n,\n    \"primaryObjectiveTypeCode\": \"WRR\",\n    \"secondaryObjectiveTypeCode\": \"CRIT_INFRA\",\n    \"tertiaryObjectiveTypeCode\": \"ECO_REST\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Parks Section Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/bcParksSectionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"bcParksSectionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET program Area Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/programAreaCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"programAreaCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Forest District Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/forestDistrictCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"forestDistrictCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET General Scope Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/generalScopeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"generalScopeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GETProject Type Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/projectTypeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"projectTypeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Forest Region Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/forestRegionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"forestRegionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BC Parks Region Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/bcParksRegionCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"bcParksRegionCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Objective Type Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/objectiveTypeCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"objectiveTypeCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Project Plan Status Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{LOCAL_API_URL}}/codes/projectPlanStatusCodes",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"codes",
						"projectPlanStatusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ProjectFiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ProjectFiscals",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project Fiscal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}/projectFiscals/{{projectPlanFiscalGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}",
						"projectFiscals",
						"{{projectPlanFiscalGuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function() {",
							"    pm.response.to.have.status(204);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{LOCAL_API_URL}}/projects/{{projectGuid}}",
					"host": [
						"{{LOCAL_API_URL}}"
					],
					"path": [
						"projects",
						"{{projectGuid}}"
					]
				}
			},
			"response": []
		}
	]
}