services:
  api:
    profiles:
      - api
    build:
      context: server/wfprev-api
      dockerfile: Dockerfile.graalvm
      # Pass the maven settings file and repo credentials as build args
      args:
        - MAVEN_SETTINGS_FILE=vivid.settings.xml
        - REPO_LOGIN=${REPO_LOGIN}
        - REPO_PASSWORD=${REPO_PASSWORD}
    environment:
      # Environment variables for the application
      WFPREV_DATASOURCE_URL: ${WFPREV_DATASOURCE_URL}
      WFPREV_DATASOURCE_USERNAME: ${WFPREV_DATASOURCE_USERNAME}
      WFPREV_DATASOURCE_PASSWORD: ${WFPREV_DATASOURCE_PASSWORD}
      WFPREV_GDB_FUNCTION_NAME: ${WFPREV_GDB_FUNCTION_NAME}
    ports:
      - "8080:8080" # Map the API's port to the host
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wfprev-network
    env_file:
      - .env

  api-dev:
    profiles:
      - dev
    build:
      context: server/wfprev-api
      dockerfile: Dockerfile.dev
      args:
        - MAVEN_SETTINGS_FILE=vivid.settings.xml
        - REPO_LOGIN=${REPO_LOGIN}
        - REPO_PASSWORD=${REPO_PASSWORD}
    environment:
      # Environment variables for the application
      WFPREV_DATASOURCE_URL: ${WFPREV_DATASOURCE_URL}
      WFPREV_DATASOURCE_USERNAME: ${WFPREV_DATASOURCE_USERNAME}
      WFPREV_DATASOURCE_PASSWORD: ${WFPREV_DATASOURCE_PASSWORD}
      WFPREV_GDB_FUNCTION_NAME: ${WFPREV_GDB_FUNCTION_NAME}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wfprev-network
    env_file:
      - .env

  liquibase:
    build:
      context: db
      dockerfile: Dockerfile.liquibase.local
    command: >
      /bin/sh -c "
      liquibase --url=jdbc:postgresql://wfprev-postgres:5432/wfprev --changelog-file=db/wfprev-changelog.json --username=wfprev --password=${WFPREV_DB_PASSWORD} clearCheckSums &&
      liquibase --url=jdbc:postgresql://wfprev-postgres:5432/wfprev --changelog-file=db/wfprev-changelog.json --username=wfprev --password=${WFPREV_DB_PASSWORD} update &&
      liquibase --url=jdbc:postgresql://wfprev-postgres:5432/wfprev --changelog-file=db/app_wf1_prev-changelog.json --username=app_wf1_prev --password=${APP_WF1_PREV_PASSWORD} update
      "
    volumes:
      - ./db:/liquibase/db
      - ./db/scripts:/liquibase/scripts
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wfprev-network

  db:
    image: postgis/postgis:16-3.4
    container_name: wfprev-postgres
    environment:
      POSTGRES_USER: wfprev
      POSTGRES_PASSWORD: ${WFPREV_DATASOURCE_PASSWORD}
      POSTGRES_DB: wfprev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wfprev-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U wfprev -d wfprev" ]
      interval: 10s
      timeout: 5s
      retries: 10  # Allow up to 10 retries (100 seconds total)
      start_period: 15s  # Delay the first check by 15 seconds

  schemaspy:
    profiles:
      - schemaspy
    build:
      context: .
      dockerfile: schemaspy/Dockerfile
    container_name: schemaspy
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_PASSWORD: ${WFPREV_DATASOURCE_PASSWORD}
    command:
      [
        "-t", "pgsql",
        "-host", "wfprev-postgres",
        "-port", "5432",
        "-db", "wfprev",
        "-u", "wfprev",
        "-p", "${WFPREV_DATASOURCE_PASSWORD}",
        "-debug"
      ]
    volumes:
      - ./schemaspy/schemaspy-output:/output
    networks:
      - wfprev-network

networks:
  wfprev-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
