name: Build & Dockerize Node.js Server
on:
  workflow_dispatch:
    inputs:
      DEFAULT_APPLICATION_ENVIRONMENT:
        required: true
        type: string
        default: dev
jobs:
  build-node-server:
    runs-on: ubuntu-latest
    env:
      NPMRC: ${{ secrets.NPMRC }}
      IMAGE_NAME: ${{ github.repository }}-wfprev-gdb-extractor
      AWS_REGION: us-west-2 
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Add .npmrc file
      working-directory: ./node/wfprev-gdb-extractor
      run: echo -e "$NPMRC" > ~/.npmrc
    
    - name: Clear cache
      working-directory: ./node/wfprev-gdb-extractor
      run: |
        rm -f package-lock.json
        rm -rf node_modules
        npm cache clean --force
    
    - name: Install dependencies
      working-directory: ./node/wfprev-gdb-extractor
      run: npm install
    
    # Package Lambda function code
    - name: Create Lambda deployment package
      working-directory: ./node/wfprev-gdb-extractor
      run: |
        # Remove dev dependencies for smaller package size
        npm prune --production
        # Create zip file with all required files
        zip -r ../../lambda-deployment.zip . -x "*.git*" "*.github*" "tests/*" "*.zip"
    
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    # Upload Lambda package to S3
    - name: Upload Lambda package to S3
      run: |
        ENVIRONMENT="${{ github.event.inputs.DEFAULT_APPLICATION_ENVIRONMENT }}"
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        LAMBDA_PACKAGE_KEY="lambda-deployment-${TIMESTAMP}.zip"
        aws s3 cp lambda-deployment.zip s3://wfprev-${ENVIRONMENT}-lambda-bucket/${LAMBDA_PACKAGE_KEY}
        echo "LAMBDA_PACKAGE_KEY=$LAMBDA_PACKAGE_KEY" >> $GITHUB_OUTPUT
      id: lambda-upload
    
    # Docker build steps continue as before
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
          type=raw,value=${{ github.sha }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./node/wfprev-gdb-extractor
        file: ./node/wfprev-gdb-extractor/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}