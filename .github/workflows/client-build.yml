name: Deploy Angular App to S3 and CloudFront

on:
  push:
    branches:
      - main  # Adjust to your deployment branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Adjust as needed

    - name: Install dependencies
      run: npm install

    - name: Build Angular App
      run: npm run build --prod

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "ca-central-1"  # Adjust to match your AWS region

    # this will require the bucket to exist
    # so terraform step will need to run first
    - name: Sync files to S3
      run: |
        aws s3 sync ./dist/your-angular-app s3://wfprev_site_bucket \
          --delete \
          --cache-control max-age=31536000,public \
          --exclude index.html
        aws s3 cp ./dist/your-angular-app/index.html s3://wfprev_site_bucket/index.html \
          --cache-control max-age=0,no-cache,no-store,must-revalidate

    - name: Invalidate CloudFront Cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
      # see distribution ID section in terraform scripts
      # Like the sync, this means we need to run terraform first, then
      # trigger this action with the returned distribution ID
