# Build stage
FROM ghcr.io/graalvm/native-image-community:21 AS builder

WORKDIR /app

# Copy maven settings first
COPY mvn_settings/vivid.settings.xml /root/.m2/settings.xml

# Copy rest of the application
COPY . /app

# Make mvnw executable
RUN chmod +x mvnw

# Build the native image using settings.xml
RUN ./mvnw -s mvn_settings/vivid.settings.xml -Pnative native:compile -DskipTests

# Runtime stage
FROM ubuntu:22.04

WORKDIR /app

# Install necessary runtime dependencies
RUN apt-get update && apt-get install -y \
    libc6 \
    libstdc++6 \
    && rm -rf /var/lib/apt/lists/*

# Copy the native executable from builder stage
COPY --from=builder /app/target/wfprev-api /app/

# Environment variables for database and security
ENV WFPREV_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/wfprev \
    WFPREV_DATASOURCE_USERNAME=wfprev \
    WFPREV_DATASOURCE_PASSWORD=password \
    WFPREV_CLIENT_ID=WFNEWS-REST \
    WFPREV_CLIENT_SECRET=200e68112cc360193b572b9110a9b8d2 \
    WEBADE_OAUTH2_CHECK_TOKEN_URL=https://wfappsi.nrs.gov.bc.ca/pub/oauth2/v1/check_token \
    WEBADE_OAUTH2_CHECK_AUTHORIZE_URL=https://wfappsi.nrs.gov.bc.ca/ext/oauth2/v1/oauth/authorize

# Expose the port your application uses
EXPOSE 8080

# Run the native executable
ENTRYPOINT ["/app/wfprev-api"]