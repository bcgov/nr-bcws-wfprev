FROM ghcr.io/graalvm/graalvm-community:21-ol9

# Install system-level RUNTIME libraries that the SVM AWT libs depend on.
RUN microdnf install -y \
    fontconfig-devel freetype-devel libX11-devel libXext-devel \
    libXtst-devel libXi-devel libXrender-devel zlib-devel \
 && microdnf clean all

# --- Build the Native Image ---
ARG MAVEN_SETTINGS_FILE=vivid.settings.xml
ARG REPO_LOGIN
ARG REPO_PASSWORD
ENV REPO_LOGIN=${REPO_LOGIN} REPO_PASSWORD=${REPO_PASSWORD}

WORKDIR /app
COPY mvn_settings/${MAVEN_SETTINGS_FILE} /root/.m2/settings.xml
COPY . .

RUN chmod +x mvnw
# Run the native compilation. If this step fails, the error is in the build process.
RUN ./mvnw -Pnative native:compile -DskipTests \
    -Dgraalvm.native.optimizations.quick-build=true \
    -Drepo.login=${REPO_LOGIN} -Drepo.password=${REPO_PASSWORD}


ARG APP_NAME=wfprev-api
# Verify the native executable exists after the build.
RUN test -f "/app/target/${APP_NAME}" || (echo "ERROR: Native executable not found after build!" && exit 1)

# Set the final working directory (keeping it consistent)
WORKDIR /app/target

# Use ldd to verify the dependencies are present
RUN ldd wfprev-api

#ENV LD_DEBUG=all

# Set the entrypoint to run the application
EXPOSE 8080
ENTRYPOINT ["./wfprev-api", "-Djava.awt.headless=true", "-Dsun.java2d.cmm=sun.java2d.cmm.lcms.LCMS"]